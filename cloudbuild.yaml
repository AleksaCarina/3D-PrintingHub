<<<<<<< HEAD
steps:
  # Build the image from the Dockerfile at repo root
  - name: gcr.io/cloud-builders/docker
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/printinghub:$SHORT_SHA', '.']

  # Push the image
  - name: gcr.io/cloud-builders/docker
    args: ['push', 'gcr.io/$PROJECT_ID/printinghub:$SHORT_SHA']

  # Deploy to Cloud Run
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk:slim
    entrypoint: gcloud
    args:
      [
        'run','deploy','$_SERVICE',
        '--image','gcr.io/$PROJECT_ID/printinghub:$SHORT_SHA',
        '--region','$_REGION',
        '--platform','managed',
        '--allow-unauthenticated'
      ]

images:
  - 'gcr.io/$PROJECT_ID/printinghub:$SHORT_SHA'

options:
  logging: CLOUD_LOGGING_ONLY

substitutions:
  _SERVICE: 'printinghub-backend'     # change if you want a different Cloud Run service name
  _REGION: 'europe-west1'             # or 'europe-central2' (Warsaw) if you prefer
=======
steps:
  # Build the image from Dockerfile at repo root
  - name: gcr.io/cloud-builders/docker
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/printinghub:$SHORT_SHA', '.']

  # Push the image
  - name: gcr.io/cloud-builders/docker
    args: ['push', 'gcr.io/$PROJECT_ID/printinghub:$SHORT_SHA']

  # Deploy to Cloud Run (Fully managed)
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk:slim
    entrypoint: gcloud
    args:
      [
        'run','deploy','$_SERVICE',
        '--image','gcr.io/$PROJECT_ID/printinghub:$SHORT_SHA',
        '--region','$_REGION',
        '--platform','managed',
        '--allow-unauthenticated',
        '--set-env-vars',
        'DATABASE_URL=$_DATABASE_URL,JWT_SECRET_KEY=$_JWT_SECRET_KEY,ACCESS_TOKEN_EXPIRE_MINUTES=$_ACCESS_TOKEN_EXPIRE_MINUTES'
      ]

images:
  - 'gcr.io/$PROJECT_ID/printinghub:$SHORT_SHA'

options:
  logging: CLOUD_LOGGING_ONLY

substitutions:
  _SERVICE: 'printinghub-backend'        # Cloud Run service name
  _REGION: 'europe-west1'                # pick your region
  _DATABASE_URL: 'sqlite:////app/app.db' # or postgres url when ready
  _JWT_SECRET_KEY: 'replace_me'          # set to a strong secret (or use Secret Manager)
  _ACCESS_TOKEN_EXPIRE_MINUTES: '60'
>>>>>>> 2a2e7169346ac8945265a366b1d343b2ab104e43
